module.exports = /* eslint-disable */ [{"name":"SPLink","description":"A component to create Hyperlink","props":{"link_href":{"type":{"name":"string"},"required":false,"description":"pass the complete url you want to navigate to","defaultValue":{"value":"\"https://www.socialpilot.co/\"","computed":false}},"link_content":{"type":{"name":"string"},"required":false,"description":"content you want to pass for link(only text string for now)","defaultValue":{"value":"\"SocialPilot\"","computed":false}},"link_color":{"type":{"name":"custom","raw":"ExtraPropTypes.color"},"required":false,"description":"color for unvisited link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.","defaultValue":{"value":"\"#0000FF\"","computed":false}},"link_hover_color":{"type":{"name":"custom","raw":"ExtraPropTypes.color"},"required":false,"description":"color for hovering link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.","defaultValue":{"value":"\"#800080\"","computed":false}},"link_active_color":{"type":{"name":"custom","raw":"ExtraPropTypes.color"},"required":false,"description":"color for active link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.","defaultValue":{"value":"\"#551A8B\"","computed":false}},"link_visited_color":{"type":{"name":"custom","raw":"ExtraPropTypes.color"},"required":false,"description":"color for visited link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.","defaultValue":{"value":"\"#800080\"","computed":false}}},"code":"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ExtraPropTypes from \"react-extra-prop-types\";\nimport styled from \"styled-components\";\nimport \"bootstrap-css-only\";\n\nconst Link = styled.a`\n  display: inline-block;\n  font-size: 1em;\n  padding: 0.25em 1em;\n\n  ${Link}:link {\n    color: ${props => props.link_color};\n  }\n\n  ${Link}:hover {\n    color: ${props => props.link_hover_color};\n  }\n\n  ${Link}:active {\n    color: ${props => props.link_active_color};\n  }\n\n  ${Link}:visited {\n    color: ${props => props.link_visited_color};\n  }\n`;\n\n/** A component to create Hyperlink */\nclass SPLink extends Component {\n  render() {\n    return (\n      <Link\n        href={this.props.link_href}\n        link_color={this.props.link_color}\n        link_hover_color={this.props.link_hover_color}\n        link_active_color={this.props.link_active_color}\n        link_visited_color={this.props.link_visited_color}\n      >\n        {this.props.link_content}\n      </Link>\n    );\n  }\n}\n\nSPLink.propTypes = {\n  /** pass the complete url you want to navigate to */\n  link_href: PropTypes.string.isRequired,\n  /** content you want to pass for link(only text string for now) */\n  link_content: PropTypes.string.isRequired,\n  /** color for unvisited link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords. */\n  link_color: ExtraPropTypes.color,\n  /** color for hovering link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.  */\n  link_hover_color: ExtraPropTypes.color,\n  /** color for active link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.  */\n  link_active_color: ExtraPropTypes.color,\n  /** color for visited link. CSS color string (rgb(a), hsl(a), hex). Excludes keywords.  */\n  link_visited_color: ExtraPropTypes.color\n};\n\nSPLink.defaultProps = {\n  link_href: \"https://www.socialpilot.co/\",\n  link_content: \"SocialPilot\",\n  link_color: \"#0000FF\",\n  link_hover_color: \"#800080\",\n  link_active_color: \"#551A8B\",\n  link_visited_color: \"#800080\"\n};\n\nexport default SPLink;\n","examples":[{"name":"ExampleSPLink","description":"A plain google link","code":"import React from \"react\";\nimport SPLink from \"/home/hardik/git/ui-component-lib/src/components/SPLink\";\n\n/** A plain google link */\nexport default function ExampleSPLink() {\n  return (\n    <SPLink link_href={\"https://www.google.com\"} link_content={\"google\"} />\n  );\n}\n"}]},{"name":"SPTable","description":"A Table Component","props":{"title":{"type":{"name":"string"},"required":false,"description":"Title of the table","defaultValue":{"value":"\"Table\"","computed":false}},"colsName":{"type":{"name":"arrayOf","value":{"name":"string"}},"required":false,"description":"Name of the columns","defaultValue":{"value":"[]","computed":false}},"data":{"type":{"name":"arrayOf","value":{"name":"array"}},"required":false,"description":"Data for the component","defaultValue":{"value":"[[]]","computed":false}},"dataComponent":{"type":{"name":"arrayOf","value":{"name":"object"}},"required":false,"description":"Components to be use for a specific column for each row","defaultValue":{"value":"[{}]","computed":false}}},"code":"/* SPTable is a component made using react-bootstrap's Table Component \n*  SPTable needs 3 Props to create a table\n*/\n\n/* props used for SPTable component\n* colsName: is a prop wherein you pass array of colName to the table\n* data: is a prop is an array which holds array represting each row in the table \n* dataComponent: is a Array which holds Component to be rendered for a specific column for each row\n*/\n\nimport React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport \"bootstrap-css-only\";\n\n/** A Table Component */\nclass SPTable extends Component {\n  createColumns() {\n    let cols = [];\n    if (this.props.colsName.length > 0) {\n      for (let i = 0; i < this.props.colsName.length; i++) {\n        cols[i] = <th key={i}>{this.props.colsName[i]}</th>;\n      }\n    }\n    return cols;\n  }\n\n  createRows() {\n    let rows = [];\n    // it will hold data for single row\n    let rowData = [];\n    // console.log(this.props.data);\n    if (this.props.data !== undefined) {\n      for (let i = 0; i < this.props.data.length; i++) {\n        for (let j = 0; j < this.props.colsName.length; j++) {\n          if (this.props.dataComponent[j] !== undefined) {\n            rowData[j] = <td key={j}>{this.props.dataComponent[j][i]}</td>;\n          } else {\n            rowData[j] = <td key={j}>{this.props.data[i][j]}</td>;\n          }\n        }\n        rows[i] = <tr key={i}>{rowData}</tr>;\n        rowData = [];\n      }\n    }\n    return rows;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table responsive striped bordered>\n          <caption>{this.props.title}</caption>\n          <thead>\n            <tr>{this.createColumns()}</tr>\n          </thead>\n          <tbody>{this.createRows()}</tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\nSPTable.propTypes = {\n  /** Title of the table */\n  title: PropTypes.string,\n  /** Name of the columns  */\n  colsName: PropTypes.arrayOf(PropTypes.string).isRequired,\n  /** Data for the component */\n  data: PropTypes.arrayOf(PropTypes.array),\n  /** Components to be use for a specific column for each row  */\n  dataComponent: PropTypes.arrayOf(PropTypes.object)\n};\n\nSPTable.defaultProps = {\n  title: \"Table\",\n  colsName: [],\n  data: [[]],\n  dataComponent: [{}]\n};\n\nexport default SPTable;\n","examples":[{"name":"ExampleSPTable","description":"table with plain data","code":"import React from \"react\";\nimport SPTable from \"/home/hardik/git/ui-component-lib/src/components/SPTable\";\n\n/** table with plain data */\nexport default function ExampleSPTable() {\n  return (\n    <SPTable\n      title={\"dummy\"}\n      colsName={[\"col1\", \"col2\", \"col3\"]}\n      data={[[1, 2, 3], [4, 5, 6], [7, 8, 9]]}\n    />\n  );\n}\n"}]},{"name":"SPUserIcon","description":"SPUserIcon is a user avatar component","props":{"user_name":{"type":{"name":"string"},"required":false,"description":"Name of the user (to be used in absence of image to create first letter avatar)","defaultValue":{"value":"\"SocialPilot\"","computed":false}},"user_img_src":{"type":{"name":"string"},"required":false,"description":"Image src a hyperlink to an image","defaultValue":{"value":"undefined","computed":true}},"profile_type":{"type":{"name":"enum","computed":true,"value":"\"facebook\""},"required":false,"description":"Type of profile can any one of","defaultValue":{"value":"\"facebook\"","computed":false}}},"code":"/* creates a userAvatar component  */\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport linkedin from \"./profile-icons/icons-linkedin.png\";\nimport facebook from \"./profile-icons/icons-facebook.png\";\nimport instagram from \"./profile-icons/icons-instagram.png\";\nimport \"bootstrap-css-only\";\nimport \"./SPUserIcon.css\";\n\n/* proptypes to create component */\n\n/** SPUserIcon is a user avatar component  */\nexport default class SPUserIcon extends Component {\n  getUserAvatar() {\n    let icons = { linkedin, facebook, instagram };\n    let avatar;\n    if (this.props.user_img_src === undefined) {\n      avatar = (\n        <React.Fragment>\n          <span className=\"account-first-alphabate\">\n            {this.props.user_name.charAt(0).toUpperCase()}\n          </span>\n          <i>\n            <img\n              className=\"profile-icons profile-icons-no-img\"\n              src={icons[this.props.profile_type.toLowerCase()]}\n              alt=\"profile-icon\"\n            />\n          </i>\n        </React.Fragment>\n      );\n    } else {\n      avatar = (\n        <React.Fragment>\n          <img\n            src={this.props.user_img_src}\n            className=\"img-circle\"\n            alt=\"user_avatar\"\n            width=\"45px\"\n            height=\"45px\"\n          />\n          <i>\n            <img\n              className=\"profile-icons profile-icons-img\"\n              src={icons[this.props.profile_type.toLowerCase()]}\n              alt=\"profile-icon\"\n            />\n          </i>\n        </React.Fragment>\n      );\n    }\n    return <React.Fragment>{avatar}</React.Fragment>;\n  }\n\n  render() {\n    return (\n      <div className=\"user\">\n        <span className=\"userAvatar\">{this.getUserAvatar()}</span>\n      </div>\n    );\n  }\n}\n\nSPUserIcon.propTypes = {\n  /** Name of the user (to be used in absence of image to create first letter avatar) */\n  user_name: PropTypes.string.isRequired,\n  /** Image src a hyperlink to an image  */\n  user_img_src: PropTypes.string,\n  /** Type of profile can any one of */\n  profile_type: PropTypes.oneOf(\n    \"facebook\",\n    \"linkedin\",\n    \"instagram\",\n    \"twitter\",\n    \"google_plus\",\n    \"pinterest\",\n    \"tumblr\",\n    \"Vk\",\n    \"Xing\"\n  ).isRequired\n};\n\nSPUserIcon.defaultProps = {\n  user_name: \"SocialPilot\",\n  user_img_src: undefined,\n  profile_type: \"facebook\"\n};\n","examples":[{"name":"ExampleSPUserIcon","description":"Default Avatar icon","code":"import React from \"react\";\nimport SPUserIcon from \"/home/hardik/git/ui-component-lib/src/components/SPUserIcon\";\n\n/** Default Avatar icon */\nexport default function ExampleSPUserIcon() {\n  return <SPUserIcon />;\n}\n"}]}]